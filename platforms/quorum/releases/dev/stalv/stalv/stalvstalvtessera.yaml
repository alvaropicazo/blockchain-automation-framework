apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: stalvstalvtessera
  namespace: stalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: stalvstalvtessera
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feature-1551
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: stalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stalv
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/stalv-quo/crypto/stalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstalv
    tessera:
      dburl: "jdbc:mysql://stalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE1NWIwZGEiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDEwMjE1NTU5NjhiZjk1YWMwMWU3MzY2MGQ3YzA5YmIxMzY4ZWFhMjY5NGM0NGY3ZjNlMWU4OTdjZDViOTM2NDdmNzA4MTlkMWMyZDY0YmQ4NzQ5NGM4OTliMTJhMDNiZTZjOWZiYWU4ODNjNDM1MjkzMzFkOTA2MGQwYzA5NGUxMmIwNDBhODJiMjhjMzRjMGQwNTljNjM5ZjRiZmVmNTMwMGE4ZjdiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIxMDIxNTU1OTY4YmY5NWFjMDFlNzM2NjBkN2MwOWJiMTM2OGVhYTI2IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiYzQ0ZjdmM2UxZTg5N2NkNWI5MzY0N2Y3MDgxOWQxYzJkNjRiZDg3NCI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImM4OTliMTJhMDNiZTZjOWZiYWU4ODNjNDM1MjkzMzFkOTA2MGQwYzAiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJlMTJiMDQwYTgyYjI4YzM0YzBkMDU5YzYzOWY0YmZlZjUzMDBhOGY3IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://b5a2c3515863e97b9431dd14ff66757d85fd08caede3902a4826f155ffbdd0c1b23945f2a9d60a5194c730dc2cf19d245d9ac05e57fb593916287857cdbeb437@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://95c0945f4ba78d522c2240659e20d6b2443f8076f8a5ea0171491f83a9bcf8240c3710990dc72968adf79a6b01f18921d8e1fa085882cdff7e487e10c3133ec1@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://1a30ebf460ce96520fcd4ed3495fdafde9d878ae13b37d7aad1454a9f40060fb22a1bc5d95b29fc9d7080d83bc5eec0bcfe776fa4843a016751405cfeae79db5@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://991f9f589ab8ffb6091b62d4687a5039c399970ae2b04ba50b0b8073768d4a7394710dcd48f15fea5c1be41c9be45e099c7b4f07f537dc103063c2e641d25c28@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://8e8f225a3452355eba4b08b9e57c753fc3921000731f17d83f52bb28809f624e5055fdf2539ce2c472b0f3a0b632182828a6e52763ce5a4c69b3d3d177a6bf65@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://516ab890ee8a5d247bc840a7c5e96ab88b0a13f83c53512e3ca64a1d0db51898925de80fcd64493eba6da22a56e325fd5f83ab0034af6d70f73a10cedaee6ed8@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15021
      quorumport: 15020
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
