apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: stalvstalvtessera
  namespace: stalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: stalvstalvtessera
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: stalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stalv
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/stalv-quo/crypto/stalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstalv
    tessera:
      dburl: "jdbc:mysql://stalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE2ZTc3OGQiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDJjYWI1MjIyOTQ4YWFkNWEwNzExZWM1ZjEwYzE5NGFjYTdlZTc4MWY5NDU1MzY2MGMxMDQ0ZjQ2YjU1YWE4ZWM1ZjA4MjEwN2JjZjYzNmEyOTQ5NDcxMmNjZmJjMzA4YzA0N2JiOGIxMTE4NmY1YTYyZTg4NzVkMTlhMTE5NGZmMWNiZmI0OWJkYzU5YWNkOWMxYjVkNzEzYzg0ZjQ3YjhjMzFjZGFiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIyY2FiNTIyMjk0OGFhZDVhMDcxMWVjNWYxMGMxOTRhY2E3ZWU3ODFmIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNTUzNjYwYzEwNDRmNDZiNTVhYThlYzVmMDgyMTA3YmNmNjM2YTI5NCI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjcxMmNjZmJjMzA4YzA0N2JiOGIxMTE4NmY1YTYyZTg4NzVkMTlhMTEiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJmZjFjYmZiNDliZGM1OWFjZDljMWI1ZDcxM2M4NGY0N2I4YzMxY2RhIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://e1ff76e097e16e80d7a3d55dfd5b18cd6f1424dbb988cb42db04f06a2d4820076593a133584ab2e51e41103b11dc550ace7d51b8de1e5b0cd38fb64c0337d157@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://c685a59f757949e808647b24bb3d45653e3d82f9937f23aa5683eebe4ea11ece29eae8f1b3c6980f9294e739274535c4f8cefd95e687fef253c4fb9bb45780f8@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://08be342fe50fc422eec6027f3493573f63fab6152846fb191b7f49bf0a4ea645cfad4f17747c2ad68190035fef5b2eaf35f215026cd3ec49335431135dfeb834@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://648052e088757236f6a72833997f82b2e529cfd8243b0ef6a129de8481f1b962969092b5b394f32bbf4a6a8501afe583e9c9e4107ad36c5f2fcac7fb791914ec@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://72d96578c42e95d9486c9d3bc139c57b03d22305e8d4ca4e3c956caf8be40390673a600c5ab6353e00784633d9977a6b35498337a8d3ebc05e866ea7c5efdcb2@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://b2d81c095c411a70d197bf7bf653bf948b894c817107031fe7ef2827dc0be18d1a8bfbfa46055e356605849e5e6ba8fa10746ce5dec179c45c1ae73374931501@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15021
      quorumport: 15020
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
