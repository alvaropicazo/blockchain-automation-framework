apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: stalvstalvquorum
  namespace: stalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: stalvstalvquorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_member
  values:
    replicaCount: 1
    metadata:
      namespace: stalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stalv
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/stalv-quo/crypto/stalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstalv
    tessera:
      dburl: "jdbc:mysql://stalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE2N2U4YjEiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDc0OTMxMmZhOWNjYjM2YzljNmI1YzkwZTM5Y2M5OWIwNzkzN2UzZGY5NGE0ODE2NTYyYTQyNDFkYjdhM2JmNDk3ZDVlM2QyMWFhM2MyNWQ3ZWU5NGFhNDU1YjYyMzE0ZjkyMmM0YmE0Zjc4MzRiMDBiYjhlNzU5NDEwZTQ5NGE2NmE1MjI2OTc4MjI3MmU2NTBlNmNmNWJhYTdiMjgyYWZjYWYyYjViODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI3NDkzMTJmYTljY2IzNmM5YzZiNWM5MGUzOWNjOTliMDc5MzdlM2RmIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiYTQ4MTY1NjJhNDI0MWRiN2EzYmY0OTdkNWUzZDIxYWEzYzI1ZDdlZSI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImE2NmE1MjI2OTc4MjI3MmU2NTBlNmNmNWJhYTdiMjgyYWZjYWYyYjUiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJhYTQ1NWI2MjMxNGY5MjJjNGJhNGY3ODM0YjAwYmI4ZTc1OTQxMGU0IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://84b366f21167c1bba1d011eba7ee283e44374fc49a9c646a63a8477c271a6c36f8cdd928e909254b336affe67c87ee7901bb5860a2f4274623abe0d44db06cdf@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://a7c00a6faf06828fdf7a5c74aa83c51be711aadc98244a90ec812c3c4304e4bea183ce51a09d31de95896370a3dec2764e9cccc45de9ec5c246121e82ee72ad9@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://4438693ab20484b495e1eefd39749cba4b2706f34f1d47ae969661f3732885b6bc883b2f872aa50a5000274a00d541a4ad8f14b016d71e29ea47419d40ea4e9d@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://4cc90de9fee51e8c88caba4fdf0a2865bb245e91d74500b1fa92060f85896993390e8c9b51725d6c9038ec682b0296ed35624ee3fd36e48cf69e955daf3c99a6@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://d41d37e3aceecef661c371a0b62ad7baada8037064fad4b965bd00d2e440049e17f60e0fdf2a9b997ea31a76dc98ca502b82dd9628da39ec9fb9d426a2aaceff@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://018e1e538b53580aa80b100994b48a7f3f6306722f858b5c9018a793da2a1b80302fd17299503134942f7e2a3b062dd07edae5a5459ba1dfdca33b26051fd530@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15021
      quorumport: 15020
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
