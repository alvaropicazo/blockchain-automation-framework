apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: stalvstalvquorum
  namespace: stalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: stalvstalvquorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_member
  values:
    replicaCount: 1
    metadata:
      namespace: stalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stalv
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/stalv-quo/crypto/stalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstalv
    tessera:
      dburl: "jdbc:mysql://stalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3MDRmNjciLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDkyOTQ3YzU4NTU2YTUwNzg1MTRkZjE5MTlmZTRhMWM0MjI1MWE2OGQ5NGZmMGM4YjJjMWYwYjVmNTMxNzYwODJlNDBkMDA3ODVkMjAxNThmNTU5NDVkMGVlMTE4N2ZlY2IxM2VlZjY1NzJjNzhmZDdiZjk1MzU2MTdhYTM5NDRlMjAxZTc3ZDA3NDIzYzE5MjI4OTViMWY5NDc0ZDcxMjM0MmY3OGRiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI0ZTIwMWU3N2QwNzQyM2MxOTIyODk1YjFmOTQ3NGQ3MTIzNDJmNzhkIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNWQwZWUxMTg3ZmVjYjEzZWVmNjU3MmM3OGZkN2JmOTUzNTYxN2FhMyI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjkyOTQ3YzU4NTU2YTUwNzg1MTRkZjE5MTlmZTRhMWM0MjI1MWE2OGQiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJmZjBjOGIyYzFmMGI1ZjUzMTc2MDgyZTQwZDAwNzg1ZDIwMTU4ZjU1IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://62c26b595927d3448b036137d5b32a47d7ff21addbac452a644867f526900fbbcf947f7e4167275261878599f05b87bd01fb705d5c795b6bc22ff4f6481084e9@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://ce646359ab812521f5e324eea305fdf2e7b70138ccec848f12228a59051cd0e487759add8d6300b17309b874219e73fb01e51142028a92356ed51b608f9b6718@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://621788f522aa7813834dad4130c0834214de35f165706e94106a4f097d1435330072a8bf381adf5b62e562a950c90e0cbd247cf73f665ff50bdb0c7cad145ed6@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://8ee088c173235779355cb4712c3413467970318104e499bc33735d2d434573461b4bd80cdc5a8f164f158e5b1c2d89bb5ec28b08d0d20225c86ed95f83b645c3@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://0897e630542511397a74e95fcbe7d03ff37064979bc5e8663cc6f9a2946307c403c32be32b0152a69787d1f7f7f721a45c85ced7943cbb5fde853c2c5ae9d009@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://ff2b2d516e563908b889e636205d0dd6793b6667cf1ecc57ee7d5ed6b6bb32e3fe3552e023c82ab2add6c06f3901795363f0fdecf373e60a5ec06b6afada53f3@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15021
      quorumport: 15020
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
