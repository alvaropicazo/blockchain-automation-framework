apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: stalvstalvquorum
  namespace: stalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: stalvstalvquorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_member
  values:
    replicaCount: 1
    metadata:
      namespace: stalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stalv
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/stalv-quo/crypto/stalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstalv
    tessera:
      dburl: "jdbc:mysql://stalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3MDI2YmIiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDIyOGE5MTYwZDUzNjk0ZmVjOTVmNDUwYzY0ZTFjYjNhZWY4MTBkMTQ5NDgyMmZmMzUwOGUyY2JiMzgyMzAxNTEzMmI3ZjA5ZWI0ZTQzMjk0NmU5NGI5MDUwMjg0YmEwNTdkYzM2NWZhN2RiMzNhYTZjOTRjYjAyNjZlNGE5NDE3ODZjNmY5ZjY2MzZmNWEyNGExMzg3MGY1OTY2YzNmOTViNmE3ZjBiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIxNzg2YzZmOWY2NjM2ZjVhMjRhMTM4NzBmNTk2NmMzZjk1YjZhN2YwIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiMjI4YTkxNjBkNTM2OTRmZWM5NWY0NTBjNjRlMWNiM2FlZjgxMGQxNCI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjgyMmZmMzUwOGUyY2JiMzgyMzAxNTEzMmI3ZjA5ZWI0ZTQzMjk0NmUiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJiOTA1MDI4NGJhMDU3ZGMzNjVmYTdkYjMzYWE2Yzk0Y2IwMjY2ZTRhIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://1ef70e2f8082563c2f5cfe685d720ff6c2a7a5ddb0e22d7590f57e7a337769595d24b0ef5131694ec3a36dc4dab448038a11717acbf1b300ba749b75617b1e6b@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://33ca701410741d208106e82c7dd614680a8a1ca78a03682d6dec25b840c546af4c59cce2d5b2e411062219b7878d86a461d965c29ce915b88f24310698694300@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://4b2967d2f54eba05905af1c0e53a2be7d379d5fc077fedf059c1b676bde262d3edf369ab59ce4e096421307200b7df72bfbe7c3bb62df5d02464da8d8cbbb70e@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://a8e60f3882557b17b4aec5a0081dc8687a9d2e01baf1b682d1e9bd7a0ad2dcc052bcc50d1a12e50b63c4a1b3fa9fffcbe0985efd16eae84371f4b0b4b735471c@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://726078449aaa40e7cc79cd1d990a6282e10e17cb22b1c08af67b0a25b71d80d8efa6ef564d2b1d9abd73559ffbb257e4001de37390c62b50c698e3f70985100d@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://6284ed6b245d9510b9fb2f76a2f64fc4fe48d8aaff1dab854303c50645a19b4c95e1e3493b52094694a32efbbe7191a496152a158755c95abe601fcaa5ced78d@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15021
      quorumport: 15020
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
