apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: calvcalvtessera
  namespace: calv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: calvcalvtessera
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: calv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:hashicorp-21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: calv
      status: default
      consensus: ibft
      subject: O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/calv-quo/crypto/calv
      vaultprefix: calv-quo/crypto/calv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumcalv
    tessera:
      dburl: "jdbc:mysql://calv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://calv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3MjdjMTkiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDFkOTA5NzFmMTE2MmRmYWI1YmQ4MDUzMmJkYjVkNjM5YmQ0NGYwMDg5NGQ3NGI5MmVkYWQzODhlYzJlYTNhYWQ0MTZhZGI3ZTg5Mjk1ZjBlNWU5NGMyMTYyYzU1MTJiYWI0NTgxZDc4MjFhOTE2NDllYWM5Y2I0M2E5NGM5NGM5OTM3YWRmNjg0YzMyNGM4ODRhMjUxM2E4MDJkNjU3NzlmNWRjOTZiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIxZDkwOTcxZjExNjJkZmFiNWJkODA1MzJiZGI1ZDYzOWJkNDRmMDA4IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiYzIxNjJjNTUxMmJhYjQ1ODFkNzgyMWE5MTY0OWVhYzljYjQzYTk0YyI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImM5OTM3YWRmNjg0YzMyNGM4ODRhMjUxM2E4MDJkNjU3NzlmNWRjOTYiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJkNzRiOTJlZGFkMzg4ZWMyZWEzYWFkNDE2YWRiN2U4OTI5NWYwZTVlIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://9b8064a04f642c8b0c53b34b2d55fa2769f072a839755aa439991a2064ef9b6effdae9c3e678ab803efab68420b6137e29c5bedec09ff1b6bc5758cb8898d5b6@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://f1f0d97598e0f11b1dd82ad95e33e84c1aa478a546630cc06d645271513502e37a30240640d9d31675a7dd23cbc25c1e44e1f380339a305c81b0b4e387ebda66@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://4f017c50c87b8090da6e08a9f490b06154ac915d664f8fa14eb151b34a98e89144e31f645a4b11532d58e68da8f0e44bab7309cd9b865c3ef664f4ac32a7998d@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://ebebd94dd424f88b98b7e1e0c1bd09357424ac150b3205944cedde5566098b52b9d00c150a7d4fc5644663427cb3ec3613c440c1a632f1ae15ff919e1b71895b@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://99fd633281f6bc96ab2d28302326bd483a7c6f06fffe3e2e221afd184a476ec3c53fd71504d291c54bbe21422ea69fdeef9ded4c6876a4e1f7e3fb05726e41e9@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://ed325946bfd258014a5839bada0f5b4524a7a757f47e0713823515ec7ef0f3ef2c8172bee4bfb7be78196d9281b652def3b083e41b6bb42080115e9bf23322e7@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: calv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15019
      quorumport: 15018
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
