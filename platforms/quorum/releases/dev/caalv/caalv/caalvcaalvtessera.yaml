apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: caalvcaalvtessera
  namespace: caalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: caalvcaalvtessera
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: caalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:hashicorp-21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: caalv
      status: default
      consensus: ibft
      subject: O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/caalv-quo/crypto/caalv
      vaultprefix: caalv-quo/crypto/caalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumcaalv
    tessera:
      dburl: "jdbc:mysql://caalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://caalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3N2Q2NzEiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDE0YzZhNTQwYzY1N2I2OGI4NzEzYzc2MDFiY2I4ZTliZGU3ZmNiNmM5NDA4OTZmNjY1YTNhYjFlOWM3YzY1ZDllNmFjZGM2ZGVkZmYzNmQxNTc5NDJkZjljMzIxYjUyYzA2YzZjZjhlMWM4MjMzNThlZWNlMDJhNDQ1NWI5NDY4ZmQ3MWRjNGY3NGQ3ZGIyMzY5YmQwYTUyNDVjN2IwYzk3M2YwYjJiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIwODk2ZjY2NWEzYWIxZTljN2M2NWQ5ZTZhY2RjNmRlZGZmMzZkMTU3IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiMTRjNmE1NDBjNjU3YjY4Yjg3MTNjNzYwMWJjYjhlOWJkZTdmY2I2YyI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjJkZjljMzIxYjUyYzA2YzZjZjhlMWM4MjMzNThlZWNlMDJhNDQ1NWIiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICI2OGZkNzFkYzRmNzRkN2RiMjM2OWJkMGE1MjQ1YzdiMGM5NzNmMGIyIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://7db5909617ad76024963716837ddc619b584fce329a69884744a84f51fa8cfc03fba37f77598ff29e8c675d7ad31ba495f2356558ed01c3f1efd542dfd8eaa62@sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://d83ebe0b2f79f2e1d13cb6cb9c1a58c25da0e4570aed0a29ea3f012d65953f4481c6e1d6089b91769d872bd0babe39ed0a34e1546e0de5fd05823bb1d91d9ec7@sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://d7ff4955eaf6c9c4c775ada84d4280ca5397506ca96a137acdf39d58fc50ac09fd4471eb422a7ecacba24641a2b60a7dc653989c66d43615433cef11e744025a@sucalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://b9325d0a893419b9f64706eca311531efb6c35272b68e48d7e83dea69742870327d48c040090c4e16d67f3292c85eb13d78bdbd7041afe4fd333013181e9a653@sucalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://f63e14de2c8b8960d6f6c611fab75953de30b081158305a143b0c61d765aeee9d700acc6503d53867060b8c2793fc056f36a7d62bedbe5197795815d5b2255fa@caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://2dc55e46dd7e7e11679075bfbb642e047c38b5a8d6e20cbd03afeecdb605d295f9e073843bb94b9a479e2d0d7abfc446e6f66fef4a3820362560c64d0c48be43@stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15019
      quorumport: 15018
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
