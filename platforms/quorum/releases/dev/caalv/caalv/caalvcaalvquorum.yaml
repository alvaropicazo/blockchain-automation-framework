apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: caalvcaalvquorum
  namespace: caalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: caalvcaalvquorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-newtest
    path: platforms/quorum/charts/node_quorum_member
  values:
    replicaCount: 1
    metadata:
      namespace: caalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.10.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: caalv
      status: default
      consensus: ibft
      subject: O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/caalv-quo/crypto/caalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumcaalv
    tessera:
      dburl: "jdbc:mysql://caalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://caalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caalv.tm.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stoalv-tm.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3OTIxYWIiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDQ3YmYzYmYwYTM5YTAwYWQ3YmY3ZGY0Mzk3MWU3NTE5MTFlNmQwZGE5NDMxMTY5M2E2MTg0YTFhYTcxODA2MTZhYmM0ZWJlNTU0ZmI2N2QyZjU5NGNmMTg3Yjg0NDllZWRiMmI4ZDRmNDg2MTZmMmI3OWFhODU1YmJmMGU5NDlmOTQwYTkxODRiZjEwODBhYzVmYTI4NzY0ODBkZmRmNGU2YzgzYjdiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIzMTE2OTNhNjE4NGExYWE3MTgwNjE2YWJjNGViZTU1NGZiNjdkMmY1IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNDdiZjNiZjBhMzlhMDBhZDdiZjdkZjQzOTcxZTc1MTkxMWU2ZDBkYSI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjlmOTQwYTkxODRiZjEwODBhYzVmYTI4NzY0ODBkZmRmNGU2YzgzYjciOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJjZjE4N2I4NDQ5ZWVkYjJiOGQ0ZjQ4NjE2ZjJiNzlhYTg1NWJiZjBlIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://da57ea54d687600348acdd7970469fa576573b5abaaa9be1de558b143710ae02320cc6fbfc34deab128ef222f4c813fc50d8cfead4da6be567224868971fb276@sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://3a7c48fb6ac98380687322ed89d00438bd8489c0e0c3a94328571127e6f66608a3027e6722c647385462becf7e77f7d55c4f56fb8f719fc525eb9e8e684a3dfb@sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://caef4667da3abc275f66d7ca0cebda40ddbf3c206a65a8f5e7b81ed9b3e16d269f596f416155ebd7d366442d2abf1bef4434383c2e894efc0a152caceed5f29b@sucalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://4a392bf5460ea5d4e467db1b8b22a411aa6df52e7760ba1f088dcbb368e0a2607fc5dc4201a745bd8607891c38e6beff4e84b426324d50ef1d5fba34799f5dcc@sucalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://98e54d4354731eaeb334635dca69f0ff3dc900ac6011894d6cb2ea2455593f5eb41f8849d31c94071044a70c3bbcb0423c059b40c3ee54651e4496390e8c843c@caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://ce703e0d97b84d9c6acb04403794ecfbe3b2b495b145bf0cd3a988826f3604c3335d0b2b2e51e4983131a8046678329b2a1d579a59d58f26917d97e913e22cc5@stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15019
      quorumport: 15018
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
