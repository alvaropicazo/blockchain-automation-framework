apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: caalvcaalvquorum
  namespace: caalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: caalvcaalvquorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_member
  values:
    replicaCount: 1
    metadata:
      namespace: caalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: caalv
      status: default
      consensus: ibft
      subject: O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/caalv-quo/crypto/caalv
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumcaalv
    tessera:
      dburl: "jdbc:mysql://caalv-tessera:3306/demodb"
      dbusername: demouser
      url: "https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://caalv-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3NmE4ZGQiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDJlZWNjNTI0ZDhhMWYyZWY0NzY2NDUyOTA1NTNhNjhiOTRhNDdkMmI5NGM3NDYzM2ZmNjE1YzI0MzRiMWZkOTM5OTRiNjRlNjk0ZjA0ODE1MWU5NGRiNmRhOWNkMTBhYTA3MDZiODlhNGQ5YTFhOTI3NmY1NWM4NjJhZDk5NDYyNzZhNjUzZTY5YTRkM2ZhNTNkNDk4MmI0ZjFkYjkxZTllODA5YTJiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIyZWVjYzUyNGQ4YTFmMmVmNDc2NjQ1MjkwNTUzYTY4Yjk0YTQ3ZDJiIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNjI3NmE2NTNlNjlhNGQzZmE1M2Q0OTgyYjRmMWRiOTFlOWU4MDlhMiI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImM3NDYzM2ZmNjE1YzI0MzRiMWZkOTM5OTRiNjRlNjk0ZjA0ODE1MWUiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJkYjZkYTljZDEwYWEwNzA2Yjg5YTRkOWExYTkyNzZmNTVjODYyYWQ5IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://3cb24ebfd00c658236081758b5b5b8c9dab7abb85934ef8168dab1e68880eb1601b11416201a269304eb2ac13c9180fade68d46ea076f432df0c865199629c7b@sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://2ebd6261a045c962eeea202c1d9d8439d0a8de6ce8c214fc17d939f47daf4cb718cc473b6b47c108650f1b77a8f942de601414be9b72df3c679f447b82a83959@sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://375c94bcb89094001816c931a03a4a084a40a292f8318e71de524c252fe8240cb60e41c2a90053d049fbdad14550d40c85c97fea394485b03c40b1988480fe5e@sucalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://4ba284e8de9124495b9dd5d4eeae2802a3d91690926e19d0783154333a46109b34970419d0cc9a0d8c70521aca9a86da557b4dbe1edb819b25438f070cce94c7@sucalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://1a7a8f03004fb5982282d4ead915fee8f549d6589e75afe95863050a62f2f623a07074c8a565b66a9075481603e6919bb559e76bca9e90795c4057ab90eafce2@caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://d55eeefe7f8caac9dc653073416896a3d3546682702751ebb099e8586825c59c903e2fa0892209492b35e8590ffddb72c056e82caabbf72f5abbf50015216f1d@stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: node.caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15019
      quorumport: 15018
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
