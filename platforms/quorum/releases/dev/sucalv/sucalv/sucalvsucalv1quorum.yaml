apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: sucalvsucalv1quorum
  namespace: sucalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: sucalvsucalv1quorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: lastcheck
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: sucalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: sucalv1
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer1,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/sucalv-quo/crypto/sucalv1
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumsucalv
    tessera:
      dburl: "jdbc:mysql://sucalv1-tessera:3306/demodb"
      dbusername: demouser
      url: "https://sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://sucalv1-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE4MTQ0OTkiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg2ZmVhOTQ0Nzc5YzNlMTg4OGQxNTkwZmU5YzZmZDBiOWZiNjkyMWEwZDBjMjJhOTRjYThiNGUzYjU0NDUwMmY3ZmRlMTgzYTAwY2E2ZmNiMGY0YjhhMmU1Yjg0MTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMCIsCiAgImdhc0xpbWl0IjogIjB4ZTAwMDAwMDAiLAogICJkaWZmaWN1bHR5IjogIjB4MSIsCiAgIm1peEhhc2giOiAiMHg2Mzc0Njk2MzYxNmMyMDYyNzk3YTYxNmU3NDY5NmU2NTIwNjY2MTc1NmM3NDIwNzQ2ZjZjNjU3MjYxNmU2MzY1IiwKICAiY29pbmJhc2UiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIiwKICAiYWxsb2MiOiB7CiAgICAiNDc3OWMzZTE4ODhkMTU5MGZlOWM2ZmQwYjlmYjY5MjFhMGQwYzIyYSI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImNhOGI0ZTNiNTQ0NTAyZjdmZGUxODNhMDBjYTZmY2IwZjRiOGEyZTUiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfQogIH0sCiAgIm51bWJlciI6ICIweDAiLAogICJnYXNVc2VkIjogIjB4MCIsCiAgInBhcmVudEhhc2giOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIgp9
    staticnodes: 
      [
    "enode://8c25cacef0966c11f30e2998b8884d471f1f4b3dac8aea7ce05c9f620eb81a4621b9f03e91abc68f3ddb1ba8302a748ff8b620d8341e20e309fcfc45c83eb957@sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://669bad31506918b6ed0e8e866d8d28c4a57b3f24906ede219b0ff85e84e142b7ce99cd32068d090616141abacf52d0d9921217e99e3385ed0d963279b5628bdb@sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://6e095b713a4717d74c5e8efd6e08a22fa4ea34f5515a0044ab49eb2b643029ad78ac626a9a519669aa56f4982221624bd4723eb11663102f74da5fbbaea077bb@caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://34bd21c6dbc53723124a2dbf5bb1d24ce8a1265d43003e5a414f170c20ce5ef02ea4f3d14557f244bce9c744f4a94c30b62f0ba8c84bbcc022d11ea4da54a222@stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15011
      quorumport: 15010
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
