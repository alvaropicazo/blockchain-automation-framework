apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: sucalvsucalv1quorum
  namespace: sucalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: sucalvsucalv1quorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: sucalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: sucalv1
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer1,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/sucalv-quo/crypto/sucalv1
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumsucalv
    tessera:
      dburl: "jdbc:mysql://sucalv1-tessera:3306/demodb"
      dbusername: demouser
      url: "https://sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://sucalv1-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3MjkyNjYiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDMxNTg4MTQwODJmYTQxMWM3NGU4MTBjYTE0NDY5MDc4MmIxMDhlMDU5NDQxNmUzOTgzMDJkMWQ4ZGExZTk0M2E5ZDAzMTBmNTY2NDQzYjM0YTQ5NDlkYWQwZTRiOTdmODY3Y2UyNDY1MzNkMzQ4YjI2Y2MxNmM1N2FkM2U5NDM2ODBkZTE4ZDU5ZTk3YjMwOWNjYWMzYWIyYTI3MDcyMGFkNzM5YzdiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIzMTU4ODE0MDgyZmE0MTFjNzRlODEwY2ExNDQ2OTA3ODJiMTA4ZTA1IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiMzY4MGRlMThkNTllOTdiMzA5Y2NhYzNhYjJhMjcwNzIwYWQ3MzljNyI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjQxNmUzOTgzMDJkMWQ4ZGExZTk0M2E5ZDAzMTBmNTY2NDQzYjM0YTQiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICI5ZGFkMGU0Yjk3Zjg2N2NlMjQ2NTMzZDM0OGIyNmNjMTZjNTdhZDNlIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://ecf0a706fa104512a0b4f5fb658892aac08aaa8751f614970c8d3e559bc4396ef15b9a208c91ed322a55d75dead10e5df77a58a2fc368e15bf3ead840bb2c9f3@sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://e905daf8f371db511972511590a5dcd1ae129d3bc14ef360a5a228624b06f2fdc1ccbdd97582570681d2c143ad74276a57602d48b343a0b789fde2f06e12549e@sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://84addffc683b2bfc9eae68f04b889ee5005987a331cd9bbdbe513a05d8647e11119c0739c3f38ec3f23f8b37d6370af7265df6540c53d81b6917d8d2177eeed8@sucalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://a539724682f00f221f18014d14f65c806598b1b1f3e0891b91f79c3dc0a65cbad551c86356722705c89e47ee25c5b07dfdbe9d9549211c7cc18aadabb41f4715@sucalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://e164b799dd5dfad7b012a18ee2c90d952a9a47d2d22189fc0d908f84e02218e6fcc81f031c5ce75e2aeb0ff06c906e3c1a230df02b1fd4406e03e3fd7f0707ef@caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://02bcf1fa2741b79f7de45601193b239583242867ee7655b797465b008c0d36162cc4a9fba25b749888f2bf108c11951486f4453b2cdbb29d5be3064ec8ea2211@stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: sucalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15011
      quorumport: 15010
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
