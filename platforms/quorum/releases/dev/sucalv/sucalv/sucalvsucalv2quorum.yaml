apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: sucalvsucalv2quorum
  namespace: sucalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: sucalvsucalv2quorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: sucalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.7.1
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: sucalv2
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer2,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/sucalv-quo/crypto/sucalv2
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumsucalv
    tessera:
      dburl: "jdbc:mysql://sucalv2-tessera:3306/demodb"
      dbusername: demouser
      url: "https://sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://sucalv2-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caalv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE3NjdhMGEiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDFmM2NkMjVjZGM0NDYxN2JmOWRiYmJhNmY3MjU3Mzk3MDIxNDAzNTQ5NGI3MzdjNmYxZWJjYmQ0NjNjODA0ZTY3YmQzNWQwODk3MjZmMjM2MTU5NDgwYTJiYmI3NThiZWQwYmMwYzEzMzM2MDVkYTI5N2I3MzBiNzcxNGY5NDc4NTVmY2VhYzY4MjYxN2Q3ZWYzZmU5ZmRjNTQ3YmNjZDJmNzBjOTViODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIxZjNjZDI1Y2RjNDQ2MTdiZjlkYmJiYTZmNzI1NzM5NzAyMTQwMzU0IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNzg1NWZjZWFjNjgyNjE3ZDdlZjNmZTlmZGM1NDdiY2NkMmY3MGM5NSI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjgwYTJiYmI3NThiZWQwYmMwYzEzMzM2MDVkYTI5N2I3MzBiNzcxNGYiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJiNzM3YzZmMWViY2JkNDYzYzgwNGU2N2JkMzVkMDg5NzI2ZjIzNjE1IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://0cd0a5b552af52c8fb13009bf0adcbdb4e14ee299a73a8ff1226cb2cfbbdc267c9cd47aa72ad225e7af6735851d298f7aef0587dacd9dcda6044763284c84e94@sucalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://b47216572d7191b4e03d16887983e2e68114bcf378c176bfbac26439c777f5037b92eb9407127ca0029b73c79ef2c237046d305cc5105da801ff94fe24400966@sucalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://2379eacc4d865a5c2783d6313931845c00307d6f5b8d7707ac94615b443a485f5b4845b438973e2160c3b2b6ca493d7c4c2dc509200330f614aea079e511903f@sucalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://e592b00a0d38e692177e449c1c696fefd219a7fad5a6b684051197fd03fdda05ab3e404d68134f76cffbae8a66eef29f3d4eb3ec8a1bea05cf96d9ecddc66e1a@sucalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://c89358a720a89859e22f3e5ecad95f4f2dde344878b1c9a0bef87ed362f4ed82f847cf5e6ad9c4b3a60889377baed63a85b3dca8582c99e31ab87cb1bc5dbff0@caalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://dc62d9eded34df60359feac3db4d89f00efb00e41944f724f54b41f98d11880e36199348cc9d3f312429d829d6384d00a74e4921e12cb784b986ed8a043ad710@stoalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: sucalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15013
      quorumport: 15012
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
