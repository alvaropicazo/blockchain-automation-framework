apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: scalvscalv2quorum
  namespace: scalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: scalvscalv2quorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: scalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: scalv2
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer2,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/scalv-quo/crypto/scalv2
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumscalv
    tessera:
      dburl: "jdbc:mysql://scalv2-tessera:3306/demodb"
      dbusername: demouser
      url: "https://scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://scalv2-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE2ZDRjODMiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NGFkMDliMTEyZmNlMDg5YTM4YmY3N2E0ZDU0ZGUyODQyNTBmMzZhYjE5NDcwZmM2ZDM1MDAyMDZhZWQ4YzA2NTdhN2EwMTliMzlkOGY0OThhOTM5NDE0ZGYyNjU2MTk2NGRmYjMwZTY0M2M1NjU5MThlZDA1ZmEyMTU1YTg5NDViYWVlYjBiYWEyMTYwZDNmMDQ0YWIxNWZiYzRhYzY1NDMwMmI3YWJiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIxNGRmMjY1NjE5NjRkZmIzMGU2NDNjNTY1OTE4ZWQwNWZhMjE1NWE4IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNWJhZWViMGJhYTIxNjBkM2YwNDRhYjE1ZmJjNGFjNjU0MzAyYjdhYiI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjcwZmM2ZDM1MDAyMDZhZWQ4YzA2NTdhN2EwMTliMzlkOGY0OThhOTMiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJhZDA5YjExMmZjZTA4OWEzOGJmNzdhNGQ1NGRlMjg0MjUwZjM2YWIxIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://1aaf452e8ab03c178c9a681275fad253ba03bd91d16faf3d5dd8969cbc7f64e8ec9c3653a7cffe0fc72972f97aa229df5c5e5ca89c3bd95693b0f4418df4282b@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://728afe57b3dc083b315d005313394f6aafd675a8557c002526dd647620eeb7a2992b121835a64df974303ee6dc433c849234b644a7dc723ba5e572aee3422a58@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://d2a8c1755dd17686def447407d5e42a620b538d09c4d237c86bfd2433661f27f0d7d4d9d1c80f6fbfb8d769cedfa815fcef6dee82796e6efed8379390b3a26da@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://3a063433485af410fe105d5ab37de63445863985499ab73c5413ec107731088c6d0e196075d64d531e325cee67b6dbda0b3bbbe5b1122d84cde5d77d2330b2a7@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://2b24b77daf4f71e1161fb2dc51d625ee528294194677789ad2e3cce1693ddc64e266bcf0110791efdef85aecdbb46fb3b318261986cd86e57d45edeaed777a33@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://fcc7514247fe6c7d8298587462936f393fa20b560879ed7fba9054ed7ae90be2ffe69db9bce60d9a2c8361f05e5c7c16e842507c96330bc8b76fecbd33597675@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: scalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15013
      quorumport: 15012
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
