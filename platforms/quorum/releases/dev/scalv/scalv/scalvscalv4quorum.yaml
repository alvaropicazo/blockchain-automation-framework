apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: scalvscalv4quorum
  namespace: scalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: scalvscalv4quorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: scalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: scalv4
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/scalv-quo/crypto/scalv4
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumscalv
    tessera:
      dburl: "jdbc:mysql://scalv4-tessera:3306/demodb"
      dbusername: demouser
      url: "https://scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://scalv4-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE2ZDJmZjciLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDI1Yjg1OGQ5NTQ3YTE0ZDFiZDFlZTFjZDhhNzVjYjNhNWU1ZTVkYWI5NDM2YjJjZTc4NGViZWZmNzc2Y2U2YmFiNjMzY2M4YjdmNDc1NGU4NTM5NDBmMTY1MjIwOGQ0ZjA1NDdmY2MzMGYwZDc0ODJiNGUwNTZjNjczZWM5NDA0OTgxMzFlOGQxM2JkY2EzMmIxMjIxMDAzOTMyZTdkZDM0YmVjNGRiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICIwNDk4MTMxZThkMTNiZGNhMzJiMTIyMTAwMzkzMmU3ZGQzNGJlYzRkIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiMGYxNjUyMjA4ZDRmMDU0N2ZjYzMwZjBkNzQ4MmI0ZTA1NmM2NzNlYyI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjI1Yjg1OGQ5NTQ3YTE0ZDFiZDFlZTFjZDhhNzVjYjNhNWU1ZTVkYWIiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICIzNmIyY2U3ODRlYmVmZjc3NmNlNmJhYjYzM2NjOGI3ZjQ3NTRlODUzIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://46606b9fdf84d79a3cfaecc20a41a865431f8d46fc01f8289df0690281eaa3065e15779724d7b8c7f2a2c10a15604d581aae77bc758df4eef0416bf6f58a5836@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://02795339eaa85f843f598611d42a51c07a56728493e8f8b6996589278137b17a85ba5af7098a1f39ac5a20dcda6b4dbb6947a44ab88e124cf7de80af5befd426@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://a8cf1d5b358427337b1fc0fd2da4eb5b3db00a0e527c6d98a1a0e5faeac7a1862ca6659278a5a26662f62f33531384573a74ee014b0032a3e446a5ca6550d890@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://7ade81c2a68ab4702114cf78422b86ceedf67fabbd1ab1bc86a536261cde5288321a04c45868e01ac48890dd0c617bf03c0b797413076e187fcd9e4e332756c8@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://7f8bb14148b54bd87c1bd3833f08eb513ecbf07c81dc3cc67f2c80f33b4854cbaa502088fdbc032966a440a9a7b7e7f72b29499f3a843338c25538d96d4de7f6@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://1dc5a479cecedebac40df610ea4991a45eaa8c33e9293b745f938a2a8ae19cc8084eee097c2983ad24b6836c4d69b9f833d5b61e6ab38ece739fce3f9d9a875c@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: scalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15017
      quorumport: 15016
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
