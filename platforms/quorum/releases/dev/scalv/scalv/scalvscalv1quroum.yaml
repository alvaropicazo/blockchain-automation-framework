apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: scalvscalv1quroum
  namespace: scalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: scalvscalv1quroum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feature-1551
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: scalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: scalv1
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/scalv-quo/crypto/scalv1
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumscalv
    tessera:
      dburl: "jdbc:mysql://scalv1-tessera:3306/demodb"
      dbusername: demouser
      url: "https://scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://scalv1-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE1NTgzYTUiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NGFiMTgzNDcxOWVlMjNkMjY1MzA4ODMzOTgwMzBjM2I3NTBlNmE5ZWI5NDcyYjE5ODc1NmNiNmZkYWVjNGQ3NTMxMDc5N2Q5MTBjOTljZTRhZjA5NDc0MDUxMTM2OWVjYmNjZjI2YmI4NzdlMzYyYThjZmQ0YTI3YmYzNWM5NDQ2ZjRlN2IzNTY2MWIxZmY4MGU2MWIxYzE5MzhhNTRjYmI2MzU1YmNiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI0NmY0ZTdiMzU2NjFiMWZmODBlNjFiMWMxOTM4YTU0Y2JiNjM1NWJjIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNzJiMTk4NzU2Y2I2ZmRhZWM0ZDc1MzEwNzk3ZDkxMGM5OWNlNGFmMCI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjc0MDUxMTM2OWVjYmNjZjI2YmI4NzdlMzYyYThjZmQ0YTI3YmYzNWMiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJhYjE4MzQ3MTllZTIzZDI2NTMwODgzMzk4MDMwYzNiNzUwZTZhOWViIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://baa78f0a59158e257ea66e6e41fd35b6f37b5528e63eb28a05829bcf295b547619b9f9b0ef685d433a9cac857310c55da4d98420d3b7b5041a594d100e6b4655@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://b7b7700d4baec9f980318b99b1e5ea9fe412b7a00a805bfac8c14829085b0e852761f69cee142acc4e8628a6449af8c16ee00eabe3225131817f7e17a8fce42c@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://0b13f37672aa176c07d4778e2adb428ba75dd6173432f35317bac51b631c6f708542b10dc725e82abe80b01ebbd09de29764f6a5a8f42ebba7742f7d6cde71f8@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://114196450ca612f4569fac473d8495fa2e10a9e540b4c7488d4b8c56c5ac9729e7bbc68b866fb507cc221258e64fe100c65d2e2a7167afe6aeee46d3a9d2f7e8@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://a89539f192c5961704d2568fd7d70033cb89f17a4498cf7b15dd09f9ff050bf1b4137d4d817e7573245f40266c06179c50546bdca8c361dd3df2db0ffbfe3afc@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://a45d561d01a6840b1da0593589fb40c8d7212907621282937b84146ecc57946bd7e288261d1ad36a5f7e2826e41fe2c98db1a71579546430c473229b4bd910ab@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: scalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15011
      quorumport: 15010
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
