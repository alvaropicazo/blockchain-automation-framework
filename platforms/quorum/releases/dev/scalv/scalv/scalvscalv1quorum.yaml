apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: scalvscalv1quorum
  namespace: scalv-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: scalvscalv1quorum
  helmVersion: v3
  chart:
    git: https://github.com/alvaropicazo/blockchain-automation-framework.git
    ref: feat1551-new
    path: platforms/quorum/charts/node_quorum_validator  
  values:
    replicaCount: 1
    metadata:
      namespace: scalv-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.1
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: scalv1
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer1,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secretsv2/data/scalv-quo/crypto/scalv1
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumscalv
    tessera:
      dburl: "jdbc:mysql://scalv1-tessera:3306/demodb"
      dbusername: demouser
      url: "https://scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://scalv1-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://calv.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE2ZmViZGMiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDg5Y2FiYTJjZDI5MmYyNWZhMTZlN2I4ZGYwNGZiZDc2ODg2MjJjODY5NGUyNDM5NDlmYmZkZjQ5OGNhZWRjZjgzYzE5NDhkMTk2YzI5MjhiOTc5NGUzNGZkNTNiYTc5YzA0MzVmMWU5MDBlYjRjZjhiNzFjNWU0ZTkyNzM5NDVmM2U1NmYwZjE0NmRjNzM2NDY0MjQ0NWY5ZmI2N2JlNTc4YjNjZDNiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI1ZjNlNTZmMGYxNDZkYzczNjQ2NDI0NDVmOWZiNjdiZTU3OGIzY2QzIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiODljYWJhMmNkMjkyZjI1ZmExNmU3YjhkZjA0ZmJkNzY4ODYyMmM4NiI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImUyNDM5NDlmYmZkZjQ5OGNhZWRjZjgzYzE5NDhkMTk2YzI5MjhiOTciOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJlMzRmZDUzYmE3OWMwNDM1ZjFlOTAwZWI0Y2Y4YjcxYzVlNGU5MjczIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://90b828e400e94a84de24465317ebdf9d66d629e8fd36c44d4e78759ffec7fb45950f8303b26522f39196cf75953d905a181d0b6368ed3e3105f0dfe2c0752604@scalv1.quo.dev2.aws.blockchaincloudpoc-develop.com:15010?discport=0",
    "enode://46c89dd2cfc770829180f36efae9d15af90c80f939c6106592d298f6e34e2fb8d823be2bb92d402f7d1d54838f957b75f9a90857503888979d3394ea7bee3f35@scalv2.quo.dev2.aws.blockchaincloudpoc-develop.com:15012?discport=0",
    "enode://d593cce7fc8dbda0b65d05ff2dd8d8c4b9bbd081a57fd9a5680f9b7784d5ff64a823dddaa38427f5f56387ec4a73769682c2d7bbccc0a455caab83b0b77bbf87@scalv3.quo.dev2.aws.blockchaincloudpoc-develop.com:15014?discport=0",
    "enode://e46918c04cf46334a9217343c88cb8db0492abc774b4b4582bb3623690fafe344ad794b23aa5559f284e5e24073a5327131ec631fd1144e986057ccc850e4297@scalv4.quo.dev2.aws.blockchaincloudpoc-develop.com:15016?discport=0",
    "enode://6aaf9475ecc9506634e7c8103b06163048d922cd5896a0afbed9903c1922e58cec05a07303ca658d85531c25afa76eab849cf6f15d826e353fe59b087cb0be53@calv.quo.dev2.aws.blockchaincloudpoc-develop.com:15018?discport=0",
    "enode://2388a7bdcfc14dd145a43c60f49df8301833828da1f52bc2887ccbbc6e2f48d4afe1d5ad17609496bf4a0689ff0370f974c9202c5aa6fc175994cdf784654fea@stalv.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: scalv.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15011
      quorumport: 15010
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
